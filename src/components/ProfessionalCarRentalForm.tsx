
import { useState } from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Checkbox } from '@/components/ui/checkbox';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Car, User, DollarSign, Calendar, Shield } from 'lucide-react';

interface ProfessionalCarRentalFormProps {
  isOpen: boolean;
  onClose: () => void;
  onContractGenerate: (contractData: any) => void;
}

export const ProfessionalCarRentalForm = ({ isOpen, onClose, onContractGenerate }: ProfessionalCarRentalFormProps) => {
  const [formData, setFormData] = useState({
    // Rental Company Information
    companyName: '',
    companyAddress: '',
    companyEmail: '',
    companyPhone: '',
    
    // Renter Information
    renterName: '',
    renterAddress: '',
    renterEmail: '',
    renterPhone: '',
    driversLicense: '',
    licenseState: '',
    dateOfBirth: '',
    
    // Vehicle Information
    carMake: '',
    carModel: '',
    carYear: '',
    vehicleVIN: '',
    licensePlate: '',
    mileage: '',
    fuelLevel: '',
    vehicleCondition: '',
    
    // Rental Terms
    pickupDate: '',
    pickupTime: '',
    returnDate: '',
    returnTime: '',
    pickupLocation: '',
    returnLocation: '',
    
    // Pricing
    dailyRate: '',
    weeklyRate: '',
    mileageLimit: '',
    excessMileageRate: '',
    securityDeposit: '',
    totalAmount: '',
    
    // Insurance & Protection
    basicInsurance: true,
    comprehensiveInsurance: false,
    collisionDamageWaiver: false,
    personalAccidentInsurance: false,
    roadSideAssistance: false,
    
    // Additional Terms
    fuelPolicy: '',
    smokingPolicy: false,
    petPolicy: false,
    additionalDrivers: '',
    specialRequests: '',
    governingLaw: ''
  });

  const handleInputChange = (field: string, value: any) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleSubmit = () => {
    const contractData = {
      contractType: 'carRental',
      template: 'professional',
      organizationData: {
        name: formData.companyName,
        address: formData.companyAddress,
        email: formData.companyEmail,
        phone: formData.companyPhone,
        logo: ''
      },
      dynamicFields: {
        ...formData,
        jurisdiction: formData.governingLaw
      },
      language: 'en',
      footerText: 'Generated by GenContract â€” Professional Series'
    };

    onContractGenerate(contractData);
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2 text-2xl">
            <Car className="w-6 h-6 text-purple-600" />
            Professional Car Rental Agreement
          </DialogTitle>
        </DialogHeader>

        <div className="space-y-6">
          {/* Rental Company Information */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <User className="w-5 h-5" />
                Rental Company Information
              </CardTitle>
            </CardHeader>
            <CardContent className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="companyName">Company Name *</Label>
                <Input
                  id="companyName"
                  value={formData.companyName}
                  onChange={(e) => handleInputChange('companyName', e.target.value)}
                  placeholder="Elite Car Rentals"
                />
              </div>
              <div>
                <Label htmlFor="companyPhone">Company Phone *</Label>
                <Input
                  id="companyPhone"
                  value={formData.companyPhone}
                  onChange={(e) => handleInputChange('companyPhone', e.target.value)}
                  placeholder="(555) 123-4567"
                />
              </div>
              <div className="md:col-span-2">
                <Label htmlFor="companyAddress">Company Address *</Label>
                <Input
                  id="companyAddress"
                  value={formData.companyAddress}
                  onChange={(e) => handleInputChange('companyAddress', e.target.value)}
                  placeholder="123 Rental Ave, City, State 12345"
                />
              </div>
              <div>
                <Label htmlFor="companyEmail">Company Email *</Label>
                <Input
                  id="companyEmail"
                  type="email"
                  value={formData.companyEmail}
                  onChange={(e) => handleInputChange('companyEmail', e.target.value)}
                  placeholder="info@eliterentals.com"
                />
              </div>
            </CardContent>
          </Card>

          {/* Renter Information */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <User className="w-5 h-5" />
                Renter Information
              </CardTitle>
            </CardHeader>
            <CardContent className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="renterName">Renter Name *</Label>
                <Input
                  id="renterName"
                  value={formData.renterName}
                  onChange={(e) => handleInputChange('renterName', e.target.value)}
                  placeholder="John Smith"
                />
              </div>
              <div>
                <Label htmlFor="renterEmail">Email Address *</Label>
                <Input
                  id="renterEmail"
                  type="email"
                  value={formData.renterEmail}
                  onChange={(e) => handleInputChange('renterEmail', e.target.value)}
                  placeholder="john@email.com"
                />
              </div>
              <div>
                <Label htmlFor="driversLicense">Driver's License Number *</Label>
                <Input
                  id="driversLicense"
                  value={formData.driversLicense}
                  onChange={(e) => handleInputChange('driversLicense', e.target.value)}
                  placeholder="DL123456789"
                />
              </div>
              <div>
                <Label htmlFor="licenseState">License State *</Label>
                <Input
                  id="licenseState"
                  value={formData.licenseState}
                  onChange={(e) => handleInputChange('licenseState', e.target.value)}
                  placeholder="California"
                />
              </div>
              <div>
                <Label htmlFor="dateOfBirth">Date of Birth *</Label>
                <Input
                  id="dateOfBirth"
                  type="date"
                  value={formData.dateOfBirth}
                  onChange={(e) => handleInputChange('dateOfBirth', e.target.value)}
                />
              </div>
              <div>
                <Label htmlFor="renterPhone">Phone Number *</Label>
                <Input
                  id="renterPhone"
                  value={formData.renterPhone}
                  onChange={(e) => handleInputChange('renterPhone', e.target.value)}
                  placeholder="(555) 987-6543"
                />
              </div>
              <div className="md:col-span-2">
                <Label htmlFor="renterAddress">Address *</Label>
                <Input
                  id="renterAddress"
                  value={formData.renterAddress}
                  onChange={(e) => handleInputChange('renterAddress', e.target.value)}
                  placeholder="456 Customer St, City, State 12345"
                />
              </div>
            </CardContent>
          </Card>

          {/* Vehicle Information */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Car className="w-5 h-5" />
                Vehicle Information
              </CardTitle>
            </CardHeader>
            <CardContent className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="carMake">Vehicle Make *</Label>
                <Input
                  id="carMake"
                  value={formData.carMake}
                  onChange={(e) => handleInputChange('carMake', e.target.value)}
                  placeholder="Toyota"
                />
              </div>
              <div>
                <Label htmlFor="carModel">Vehicle Model *</Label>
                <Input
                  id="carModel"
                  value={formData.carModel}
                  onChange={(e) => handleInputChange('carModel', e.target.value)}
                  placeholder="Camry"
                />
              </div>
              <div>
                <Label htmlFor="carYear">Year *</Label>
                <Input
                  id="carYear"
                  value={formData.carYear}
                  onChange={(e) => handleInputChange('carYear', e.target.value)}
                  placeholder="2023"
                />
              </div>
              <div>
                <Label htmlFor="licensePlate">License Plate *</Label>
                <Input
                  id="licensePlate"
                  value={formData.licensePlate}
                  onChange={(e) => handleInputChange('licensePlate', e.target.value)}
                  placeholder="ABC1234"
                />
              </div>
              <div>
                <Label htmlFor="vehicleVIN">VIN Number</Label>
                <Input
                  id="vehicleVIN"
                  value={formData.vehicleVIN}
                  onChange={(e) => handleInputChange('vehicleVIN', e.target.value)}
                  placeholder="1HGBH41JXMN109186"
                />
              </div>
              <div>
                <Label htmlFor="mileage">Current Mileage</Label>
                <Input
                  id="mileage"
                  value={formData.mileage}
                  onChange={(e) => handleInputChange('mileage', e.target.value)}
                  placeholder="25000"
                />
              </div>
              <div>
                <Label htmlFor="fuelLevel">Fuel Level at Pickup</Label>
                <Select value={formData.fuelLevel} onValueChange={(value) => handleInputChange('fuelLevel', value)}>
                  <SelectTrigger>
                    <SelectValue placeholder="Select fuel level" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="full">Full</SelectItem>
                    <SelectItem value="3/4">3/4 Tank</SelectItem>
                    <SelectItem value="1/2">1/2 Tank</SelectItem>
                    <SelectItem value="1/4">1/4 Tank</SelectItem>
                    <SelectItem value="empty">Empty</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </CardContent>
          </Card>

          {/* Rental Terms */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Calendar className="w-5 h-5" />
                Rental Terms
              </CardTitle>
            </CardHeader>
            <CardContent className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="pickupDate">Pickup Date *</Label>
                <Input
                  id="pickupDate"
                  type="date"
                  value={formData.pickupDate}
                  onChange={(e) => handleInputChange('pickupDate', e.target.value)}
                />
              </div>
              <div>
                <Label htmlFor="pickupTime">Pickup Time *</Label>
                <Input
                  id="pickupTime"
                  type="time"
                  value={formData.pickupTime}
                  onChange={(e) => handleInputChange('pickupTime', e.target.value)}
                />
              </div>
              <div>
                <Label htmlFor="returnDate">Return Date *</Label>
                <Input
                  id="returnDate"
                  type="date"
                  value={formData.returnDate}
                  onChange={(e) => handleInputChange('returnDate', e.target.value)}
                />
              </div>
              <div>
                <Label htmlFor="returnTime">Return Time *</Label>
                <Input
                  id="returnTime"
                  type="time"
                  value={formData.returnTime}
                  onChange={(e) => handleInputChange('returnTime', e.target.value)}
                />
              </div>
              <div className="md:col-span-2">
                <Label htmlFor="pickupLocation">Pickup Location *</Label>
                <Input
                  id="pickupLocation"
                  value={formData.pickupLocation}
                  onChange={(e) => handleInputChange('pickupLocation', e.target.value)}
                  placeholder="Airport Terminal 1, Gate A"
                />
              </div>
              <div className="md:col-span-2">
                <Label htmlFor="returnLocation">Return Location *</Label>
                <Input
                  id="returnLocation"
                  value={formData.returnLocation}
                  onChange={(e) => handleInputChange('returnLocation', e.target.value)}
                  placeholder="Same as pickup location"
                />
              </div>
            </CardContent>
          </Card>

          {/* Pricing */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <DollarSign className="w-5 h-5" />
                Pricing & Fees
              </CardTitle>
            </CardHeader>
            <CardContent className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="dailyRate">Daily Rate *</Label>
                <Input
                  id="dailyRate"
                  value={formData.dailyRate}
                  onChange={(e) => handleInputChange('dailyRate', e.target.value)}
                  placeholder="45.00"
                />
              </div>
              <div>
                <Label htmlFor="weeklyRate">Weekly Rate</Label>
                <Input
                  id="weeklyRate"
                  value={formData.weeklyRate}
                  onChange={(e) => handleInputChange('weeklyRate', e.target.value)}
                  placeholder="280.00"
                />
              </div>
              <div>
                <Label htmlFor="mileageLimit">Mileage Limit (per day)</Label>
                <Input
                  id="mileageLimit"
                  value={formData.mileageLimit}
                  onChange={(e) => handleInputChange('mileageLimit', e.target.value)}
                  placeholder="150"
                />
              </div>
              <div>
                <Label htmlFor="excessMileageRate">Excess Mileage Rate</Label>
                <Input
                  id="excessMileageRate"
                  value={formData.excessMileageRate}
                  onChange={(e) => handleInputChange('excessMileageRate', e.target.value)}
                  placeholder="0.25"
                />
              </div>
              <div>
                <Label htmlFor="securityDeposit">Security Deposit *</Label>
                <Input
                  id="securityDeposit"
                  value={formData.securityDeposit}
                  onChange={(e) => handleInputChange('securityDeposit', e.target.value)}
                  placeholder="300.00"
                />
              </div>
            </CardContent>
          </Card>

          {/* Insurance & Protection */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Shield className="w-5 h-5" />
                Insurance & Protection
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-3">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                <div className="flex items-center space-x-2">
                  <Checkbox
                    checked={formData.basicInsurance}
                    onCheckedChange={(checked) => handleInputChange('basicInsurance', checked)}
                  />
                  <Label>Basic Insurance (Included)</Label>
                </div>
                <div className="flex items-center space-x-2">
                  <Checkbox
                    checked={formData.comprehensiveInsurance}
                    onCheckedChange={(checked) => handleInputChange('comprehensiveInsurance', checked)}
                  />
                  <Label>Comprehensive Insurance</Label>
                </div>
                <div className="flex items-center space-x-2">
                  <Checkbox
                    checked={formData.collisionDamageWaiver}
                    onCheckedChange={(checked) => handleInputChange('collisionDamageWaiver', checked)}
                  />
                  <Label>Collision Damage Waiver</Label>
                </div>
                <div className="flex items-center space-x-2">
                  <Checkbox
                    checked={formData.personalAccidentInsurance}
                    onCheckedChange={(checked) => handleInputChange('personalAccidentInsurance', checked)}
                  />
                  <Label>Personal Accident Insurance</Label>
                </div>
                <div className="flex items-center space-x-2">
                  <Checkbox
                    checked={formData.roadSideAssistance}
                    onCheckedChange={(checked) => handleInputChange('roadSideAssistance', checked)}
                  />
                  <Label>Roadside Assistance</Label>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Additional Terms */}
          <Card>
            <CardHeader>
              <CardTitle>Additional Terms & Policies</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <Label htmlFor="fuelPolicy">Fuel Policy *</Label>
                  <Select value={formData.fuelPolicy} onValueChange={(value) => handleInputChange('fuelPolicy', value)}>
                    <SelectTrigger>
                      <SelectValue placeholder="Select fuel policy" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="full-to-full">Full to Full</SelectItem>
                      <SelectItem value="same-to-same">Same to Same</SelectItem>
                      <SelectItem value="pre-purchase">Pre-purchase Tank</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                <div>
                  <Label htmlFor="governingLaw">Governing Law *</Label>
                  <Input
                    id="governingLaw"
                    value={formData.governingLaw}
                    onChange={(e) => handleInputChange('governingLaw', e.target.value)}
                    placeholder="State of California"
                  />
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                <div className="flex items-center space-x-2">
                  <Checkbox
                    checked={formData.smokingPolicy}
                    onCheckedChange={(checked) => handleInputChange('smokingPolicy', checked)}
                  />
                  <Label>Smoking Allowed</Label>
                </div>
                <div className="flex items-center space-x-2">
                  <Checkbox
                    checked={formData.petPolicy}
                    onCheckedChange={(checked) => handleInputChange('petPolicy', checked)}
                  />
                  <Label>Pets Allowed</Label>
                </div>
              </div>

              <div>
                <Label htmlFor="additionalDrivers">Additional Drivers</Label>
                <Textarea
                  id="additionalDrivers"
                  value={formData.additionalDrivers}
                  onChange={(e) => handleInputChange('additionalDrivers', e.target.value)}
                  placeholder="List additional authorized drivers..."
                  rows={2}
                />
              </div>

              <div>
                <Label htmlFor="specialRequests">Special Requests & Notes</Label>
                <Textarea
                  id="specialRequests"
                  value={formData.specialRequests}
                  onChange={(e) => handleInputChange('specialRequests', e.target.value)}
                  placeholder="Any special requirements or notes..."
                  rows={3}
                />
              </div>
            </CardContent>
          </Card>

          {/* Action Buttons */}
          <div className="flex gap-4 pt-4">
            <Button onClick={onClose} variant="outline" className="flex-1">
              Cancel
            </Button>
            <Button onClick={handleSubmit} className="flex-1 bg-purple-600 hover:bg-purple-700">
              Generate Car Rental Agreement
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};
